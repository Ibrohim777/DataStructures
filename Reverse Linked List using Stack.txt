#include <stdio.h>
#include <stdlib.h>
#include <stack>

using namespace std;

struct Node{
 int data;
 struct Node*next;

};
struct Node*head;

void Insert(int data)
{
    struct Node*temp = (Node*)malloc(sizeof(struct Node));
    temp->data = data;
    temp->next = NULL;
    if(head == NULL)
    {
        head = temp;
        return;
    }
    struct Node*temp1 = head;
    while(temp1->next!= NULL)
    {
        temp1=temp1->next;
    }
    temp1->next = temp;
}
void InsertNth(int data,int n)
{
    struct Node*temp = (Node*)malloc(sizeof(struct Node));
    temp->data = data;
    temp->next = NULL;
      if(n == 1)
      {
          temp->next = head;
          head = temp;
          return;
      }
      struct Node*temp1 =head;
      int i=0;
      for(;i<n-2;i++)
        temp1=temp1->next;
      temp->next = temp1->next;
      temp1->next=temp;

}
void Print(){

  struct Node*temp = head;
  while(temp!=NULL)
  {
      printf(" %d",temp->data);
      temp=temp->next;

  }
  printf("\n");




}
void Reverse(){
   if(head == NULL)
    return;
   stack<struct Node*> S;
   struct Node*temp = head;
   while(temp!=NULL)
   {
       S.push(temp);
       temp=temp->next;
   }
   temp = S.top();
   head = temp;
   S.pop();
   while(!S.empty())
   {
       temp->next = S.top();
       S.pop();
       temp=temp->next;
   }


 temp->next = NULL;


}
int main(){
   head = NULL;
   Insert(2);
   Insert(5);
   Insert(1);
   InsertNth(4,1);
   InsertNth(3,2);
   Print();
   Reverse();
   Print();
 return 0;
}
